generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model address {
  id               Int      @id @unique(map: "sqlite_autoindex_address_1") @default(autoincrement())
  label            String
  address_a        String
  address_b        String
  city             String
  country          String
  pincode          String
  user_id          Int?
  primary_address  Boolean? @default(false)
  shipping_address Boolean? @default(false)
  createdAt        DateTime @default(now())
  modifiedAt       DateTime @default(now())
  user             user?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model cart_item {
  id         Int      @id @unique(map: "sqlite_autoindex_cart_item_1") @default(autoincrement())
  session_id Decimal
  product_id Int
  quantity   Decimal
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  product    product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model category {
  id          Int      @id @unique(map: "sqlite_autoindex_category_1") @default(autoincrement())
  label       String   
  description String
  createdAt   DateTime @default(now())
  modifiedAt  DateTime @default(now())
  icon        String?  @default("help")
}

model discount {
  id          Int       @id @unique(map: "sqlite_autoindex_discount_1") @default(autoincrement())
  label       String
  description String
  percentage  Int
  createdAt   DateTime  @default(now())
  modifiedAt  DateTime  @default(now())
  product     product[]
}

model feature {
  id         Int      @id @unique(map: "sqlite_autoindex_feature_1") @default(autoincrement())
  name       String
  desc       String
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  role       role[]
}

model order_item {
  id         Int      @id @unique(map: "sqlite_autoindex_order_item_1") @default(autoincrement())
  order_id   Int
  product_id Int
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  product    product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id         Int      @id @unique(map: "sqlite_autoindex_orders_1") @default(autoincrement())
  user_id    Int
  payment_id Int
  amount     String
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payments {
  id         Int      @id @unique(map: "sqlite_autoindex_payments_1") @default(autoincrement())
  order_id   Int
  amount     String
  status     String
  provider   String
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
}

model product {
  id          Int          @id @unique(map: "sqlite_autoindex_product_1") @default(autoincrement())
  title       String
  description String
  sku         String
  category    String
  images      String
  price       Decimal
  discount_id Int
  createdAt   DateTime     @default(now())
  modifiedAt  DateTime     @default(now())
  discount    discount     @relation(fields: [discount_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item  order_item[]
  cart_item   cart_item[]
}

model role {
  id         Int      @id @unique(map: "sqlite_autoindex_role_1") @default(autoincrement()) @map("_id")
  label      String
  desc       String
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  feature_id Int
  feature    feature  @relation(fields: [feature_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user[]
  users      users[]
}

model session {
  id         Int      @id @unique(map: "sqlite_autoindex_session_1") @default(autoincrement())
  total      Decimal
  user_id    Int
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id         Int       @id @unique(map: "sqlite_autoindex_user_1") @default(autoincrement())
  first_name String
  last_name  String
  password   String    @unique(map: "sqlite_autoindex_user_2")
  createdAt  DateTime  @default(now())
  modifiedAt DateTime  @default(now())
  phone      String
  email      String    @unique(map: "sqlite_autoindex_user_3")
  role_id    Int
  role       role      @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  address    address[]
  orders     orders[]
  session    session[]
}

model users {
  id         Int      @id @unique(map: "sqlite_autoindex_users_1") @default(autoincrement()) @map("_id")
  email      String   @unique(map: "sqlite_autoindex_users_2")
  password   String   @unique(map: "sqlite_autoindex_users_3")
  role_id    Int?
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  role       role?    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
